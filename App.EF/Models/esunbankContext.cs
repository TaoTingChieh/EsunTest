// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace App.EF.Models;

public partial class esunbankContext : DbContext
{
    public esunbankContext(DbContextOptions<esunbankContext> options)
        : base(options)
    {
    }

    public virtual DbSet<LikeList> LikeLists { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<LikeList>(entity =>
        {
            entity.HasKey(e => e.LikeListNo).HasName("PK_LikeList_1");

            entity.ToTable("LikeList");

            entity.Property(e => e.LikeListNo).HasComment("喜好清單流水號");
            entity.Property(e => e.Account)
                .IsRequired()
                .HasMaxLength(20)
                .HasComment("扣款帳號");
            entity.Property(e => e.CreateId).HasComment("建立者ID");
            entity.Property(e => e.CreateTime)
                .HasComment("建立時間")
                .HasColumnType("datetime");
            entity.Property(e => e.FeeRate)
                .HasComment("手續費率")
                .HasColumnType("decimal(5, 4)");
            entity.Property(e => e.Price)
                .HasComment("產品價格")
                .HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ProductCount).HasComment("產品數量");
            entity.Property(e => e.ProductName)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("產品名稱");
            entity.Property(e => e.ProductNo).HasComment("產品流水號");
            entity.Property(e => e.TotalAmount)
                .HasComment("預計扣款總金額")
                .HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalFee)
                .HasComment("總手續費用(台幣計價)")
                .HasColumnType("decimal(5, 4)");
            entity.Property(e => e.TotalPrice)
                .HasComment("總產品價錢")
                .HasColumnType("decimal(18, 2)");
            entity.Property(e => e.UpdateId)
                .HasComment("更新者ID")
                .HasColumnName("UpdateID");
            entity.Property(e => e.UpdateTime)
                .HasComment("更新時間")
                .HasColumnType("datetime");
            entity.Property(e => e.UserID)
                .HasComment("使用者ID")
                .HasColumnName("UserID");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductNo).HasName("PK__Products__B40D3A36933E61BC");

            entity.Property(e => e.ProductNo).HasComment("Primary Key 產品流水號");
            entity.Property(e => e.CreateId)
                .HasComment("建立者ID")
                .HasColumnName("CreateID");
            entity.Property(e => e.CreateTime)
                .HasComment("建立時間")
                .HasColumnType("datetime");
            entity.Property(e => e.FeeRate)
                .HasComment("手續費率")
                .HasColumnType("decimal(5, 4)");
            entity.Property(e => e.Price)
                .HasComment("產品價格")
                .HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ProductName)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("產品名稱");
            entity.Property(e => e.UpdateId)
                .HasComment("更新者ID")
                .HasColumnName("UpdateID");
            entity.Property(e => e.UpdateTime)
                .HasComment("更新時間")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.No);

            entity.Property(e => e.Account)
                .IsRequired()
                .HasMaxLength(20)
                .HasComment("帳號");
            entity.Property(e => e.CreateId)
                .HasComment("建立者ID")
                .HasColumnName("CreateID");
            entity.Property(e => e.CreateTime)
                .HasComment("建立時間")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("電子郵件");
            entity.Property(e => e.UpdateId)
                .HasComment("更新者ID")
                .HasColumnName("UpdateID");
            entity.Property(e => e.UpdateTime)
                .HasComment("更新時間")
                .HasColumnType("datetime");
            entity.Property(e => e.UserId)
                .HasComment("使用者ID")
                .HasColumnName("UserID");
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("使用者名稱");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}